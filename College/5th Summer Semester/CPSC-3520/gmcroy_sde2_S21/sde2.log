# #use "file.ml";;
val exist : 'a -> 'a list -> int = <fun>
val first_duplicate : int list -> int = <fun>
val helper_2 : int list * int * int list -> int = <fun>
val first_nonrepeating : int list -> int = <fun>
val sumOfTwo : int list * int list * int -> bool = <fun>
val helper_3 : int * int * (int * int) list -> (int * int) list = <fun>
val cyk_sublists : int -> (int * int) list = <fun>
# first_duplicate [1;2;3;4;5;6;7;4;5;8;9];;
- : int = 4
# first_duplicate [1;2;3;4;5;6;7;8;9;10];;
- : int = -10000
# 
  ;;
# first_nonrepeating [1;2;3;2;7;5;6;1;3];;
- : int = 7
# first_nonrepeating [1;2;9;3;2;7;5;6;1;3];;
- : int = 9
# ;;
# sumOfTwo ([1;2;3],[10;20;30;40],42);;
- : bool = true
# sumOfTwo ([1;2;3],[10;20;30;40],40);;
- : bool = false
# ;;
# cyk_sublists 4;;
- : (int * int) list = [(1, 3); (2, 2); (3, 1)]
# cyk_sublists 3;;
- : (int * int) list = [(1, 2); (2, 1)]
# ;;